{"version":3,"sources":["Images/logo.png","Context/NotesContext.tsx","Context/WorkshopsContext.tsx","Context/DropdownsContext.tsx","Services/requests.tsx","Hooks/UseFetchData.ts","Hooks/UseFetchDataEffect.ts","Pages/Charts.tsx","Pages/Home.tsx","Pages/Login.tsx","Pages/Notes/Components/CreateNoteForm.tsx","Pages/Notes/Components/EditNoteForm.tsx","Pages/Notes/Note.tsx","Pages/Notes/Notes.tsx","Components/DatePickerField.tsx","Services/dropdowns.ts","Components/MultiSelectField.tsx","Components/NumberField.tsx","Components/FormRow.tsx","Components/SelectField.tsx","Pages/Workshops/Components/WorkshopForm.tsx","Pages/Workshops/EditWorkshop.tsx","Components/ChipList.tsx","Components/DropdownSingleValue.tsx","Pages/Workshops/Workshop.tsx","Pages/Workshops/Workshops.tsx","Hooks/UseQueryParams.ts","Pages/Workshops/CreateWorkshop.tsx","Routes.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","NotesContext","React","notes","setNotes","WorkshopsContext","createContext","workshops","setWorkshops","DropdownContext","dropdowns","setDropdowns","backendUrl","oauthEndpoint","adminEndpoint","apiEndpoint","centersEndpoint","dropdownsEndpoint","loginEndpoint","logoutEndpoint","notesEndpoint","tagsEndpoint","workshopsEndpoint","axiosInstance","axios","create","defaults","withCredentials","makeRequest","url","a","method","data","headers","endpoint","callback","body","response","request","responseURL","window","location","pathname","replace","console","log","message","fetchData","UseFetchData","HomeButton","styled","Fab","Charts","withRouter","history","notesContext","useContext","UseFetchDataEffect","nbProAccountsData","nbBeneficiariesAccountsData","nbStoredDocsData","forEach","note","index","date","nbProAccounts","nbBeneficiariesAccounts","nbStoredDocs","Container","maxWidth","size","color","aria-label","onClick","push","Typography","variant","component","gutterBottom","colors","StyledContent","div","StyledChipsContainer","StyledListItemContent","ChartsButton","Logout","Button","Admin","Home","useHistory","useState","centers","setCenters","tags","setTags","filteredCenters","setFilteredCenters","map","tag","Chip","key","id","label","name","clickable","filter","center","includes","TextField","onChange","event","search","target","value","toLowerCase","List","dense","ListItem","ListItemIcon","htmlColor","ListItemText","secondary","permanence","style","textAlign","width","primary","workshop","marginLeft","StyledImage","img","StyledImageContainer","StyledForm","form","Login","login","values","src","logo","alt","initialValues","email","password","onSubmit","render","props","handleSubmit","type","margin","handleChange","errors","marginTop","marginBottom","fontSize","href","marginRight","CreateNoteForm","centerId","closeModal","Date","selectedDate","setSelectedDate","handleDateChange","hours","attendees","place","nbPros","nbBeneficiaries","beneficiariesNotes","proNotes","reconnectNotes","display","flex","utils","DateFnsUtils","disableToolbar","format","KeyboardButtonProps","alignItems","justifyContent","height","multiline","rows","EditNoteForm","update","enableReinitialize","StyledCard","Card","EditNote","StyledChip","Note","match","editNote","CardContent","position","backgroundColor","avatar","Avatar","PaginationContainer","Header","NotesTitle","HeaderContent","AddNoteIcon","Notes","isModalOpen","useBoolean","isEditModalOpen","useNumber","idNoteBeingEdited","noteIdActions","notesCount","notesCountActions","currentPage","currentPageActions","params","setCenter","fetchNotes","setValue","useEffect","setTrue","Dialog","fullScreen","open","onClose","setFalse","aria-labelledby","DialogTitle","DialogContent","DialogActions","find","length","beneficiaryCount","createdBeneficiaryCount","documentsCount","Divider","Pagination","count","Math","ceil","page","DatePickerField","getDropdownNameFromIri","dropdown","iri","getDropdownValues","getDropdownOptionsArray","dropdownValues","Object","keys","MultiSelectField","setFieldValue","dropdownOptions","DropdownsContext","options","FormControl","InputLabel","Select","labelId","multiple","input","Input","renderValue","selected","selectedOption","option","MenuItem","NumberField","StyledFormRow","FormRow","children","SelectField","required","WorkshopForm","loading","loadingActions","allSkills","allSkillsArray","setTimeout","goBack","nbParticipants","duration","topics","_id","topicIris","skills","newSkills","reduce","accumulator","topicIri","skill","topic","addSkillsSuggestions","onDelete","currentSkill","participantKinds","ageBreakpoints","usedEquipments","equipmentSuppliers","globalReport","improvementAxis","FormControlLabel","control","Checkbox","usedVault","FormGroup","nbCreatedEvents","nbCreatedContacts","nbCreatedNotes","disabled","CircularProgress","EditWorkshop","entity","workshopId","useParams","setWorkshop","entityUrl","parseInt","updateWorkshop","ChipList","list","dropdownKind","listItem","DropdownSingleValue","Workshop","editWorkshop","topicPrecision","WorkshopsTitle","TopRightIcon","Workshops","workshopsCount","workshopsCountActions","pagesCount","pageNumberParam","useLocation","useMemo","URLSearchParams","UseQueryParams","get","pageNumber","changePage","CreateWorkshop","createWorkshop","Routes","path","exact","theme","createTheme","palette","background","default","paper","text","main","contrastText","App","ThemeProvider","Provider","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e8bcbf07.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.2054d5e3.png\";","import * as React from 'react';\nimport { Note } from '../Types/Notes';\n\ninterface NotesContext {\n  notes: Note[];\n  setNotes: (notes: Note[]) => void;\n}\n\nconst defaultValues = {\n  notes: [],\n  setNotes: () => {},\n};\n\nconst NotesContext = React.createContext<NotesContext>(defaultValues);\n\nexport default NotesContext;\n","import { WorkshopInterface } from '../Types/Workshops';\nimport { createContext } from 'react';\n\ninterface WorkshopsContext {\n    workshops: WorkshopInterface[];\n    setWorkshops: (workshops: WorkshopInterface[]) => void;\n}\n\nconst defaultValues = {\n    workshops: [],\n    setWorkshops: () => {},\n};\n\nconst WorkshopsContext = createContext<WorkshopsContext>(defaultValues);\n\nexport default WorkshopsContext;\n","import { createContext } from 'react';\nimport { Dropdowns } from \"../Types/Dropdowns\";\n\ninterface DropdownsContext {\n  dropdowns: Dropdowns;\n  setDropdowns: (dropdowns: Dropdowns) => void;\n}\n\nconst defaultValues = {\n  dropdowns: {},\n  setDropdowns: () => {\n  },\n}\n\nconst DropdownContext = createContext<DropdownsContext>(defaultValues);\n\nexport default DropdownContext;\n","import axios, { AxiosResponse, Method } from 'axios';\nimport { Entity } from '../Types/Entity';\n\nexport const backendUrl =\n  process.env.NODE_ENV === 'production' ? 'https://api.mpp.reconnect.fr' : 'https://localhost:8000';\n\nexport const oauthEndpoint = `${backendUrl}/oauth/trigger`;\nexport const adminEndpoint = `${backendUrl}/admin`;\nexport const apiEndpoint = `${backendUrl}/api`;\nexport const centersEndpoint = `${apiEndpoint}/centers`;\nexport const dropdownsEndpoint = `${apiEndpoint}/dropdowns`;\nexport const loginEndpoint = `${backendUrl}/login`;\nexport const logoutEndpoint = `${backendUrl}/logout`;\nexport const notesEndpoint = `${apiEndpoint}/notes`;\nexport const tagsEndpoint = `${apiEndpoint}/tags`;\nexport const workshopsEndpoint = `${apiEndpoint}/workshops`;\n\nexport const paginationCount = 30;\n\nexport const buildEntityEndpoint = (entity: Entity) => `${backendUrl}${entity['@id']}`;\n\nconst axiosInstance = axios.create();\naxiosInstance.defaults.withCredentials = true\n\nexport const makeRequest = async (url: string, method: Method = 'get', data: Object = {}): Promise<AxiosResponse> =>\n  axiosInstance({method, url, headers: {}, data});\n","import { Method } from 'axios';\nimport * as React from 'react';\nimport { loginEndpoint, makeRequest } from '../Services/requests';\n\nexport default (endpoint: string, callback: Function = () => {}, method: Method = 'GET') => React.useCallback(async (body: Object = {}) => {\n  try {\n    const response = await makeRequest(endpoint, method, body);\n    if (null !== callback) {\n      callback(response.data);\n    }\n    if (response.request.responseURL === loginEndpoint && window.location.pathname !== '/login') {\n      window.location.replace('login');\n    }\n  } catch (e) {\n    console.log('Error making http call', endpoint, e.message);\n  }\n}, [endpoint]);\n","import { Method } from 'axios';\nimport * as React from 'react';\nimport UseFetchData from './UseFetchData';\n\nexport default (endpoint: string, callback: Function = () => {}, method: Method = 'GET') => {\n  const fetchData = UseFetchData(endpoint, callback, method);\n\n  return React.useEffect((data: Object = {}) => {\n    fetchData(data);\n  }, [endpoint]);\n}\n","import { Fab, Typography } from \"@material-ui/core\";\nimport Container from \"@material-ui/core/Container\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport \"chart.js\";\nimport React, { useContext } from \"react\";\nimport { LineChart } from \"react-chartkick\";\nimport { withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport NotesContext from \"../Context/NotesContext\";\nimport { notesEndpoint } from \"../Services/requests\";\nimport UseFetchDataEffect from \"../Hooks/UseFetchDataEffect\";\n\nconst HomeButton = styled(Fab)`\n  position: absolute !important;\n  right: 10px;\n  top: 10px;\n`;\n\nconst Charts = withRouter(({history}: any) => {\n  const notesContext = useContext(NotesContext);\n\n  UseFetchDataEffect(`${notesEndpoint}`, (data: any) => {\n    notesContext.setNotes(data['hydra:member']);\n  })\n\n  let nbProAccountsData = {};\n  let nbBeneficiariesAccountsData = {};\n  let nbStoredDocsData = {};\n\n  notesContext.notes.forEach((note: any, index: number) => {\n    nbProAccountsData = {\n      ...nbProAccountsData,\n      [note.date]: note.nbProAccounts\n    };\n    nbBeneficiariesAccountsData = {\n      ...nbBeneficiariesAccountsData,\n      [note.date]: note.nbBeneficiariesAccounts\n    };\n    nbStoredDocsData = {...nbStoredDocsData, [note.date]: note.nbStoredDocs};\n  });\n\n  return (\n    <Container maxWidth=\"sm\">\n      <HomeButton\n        size=\"small\"\n        color=\"primary\"\n        aria-label=\"add\"\n        onClick={() => history.push(\"\")}\n      >\n        <HomeIcon/>\n      </HomeButton>\n      <Typography\n        variant=\"h3\"\n        component=\"h2\"\n        gutterBottom\n        color=\"textPrimary\"\n      >\n        Statistiques\n      </Typography>\n      <Typography variant=\"h5\" gutterBottom color=\"textPrimary\">\n        Nombre de comptes bénéficiaires crées par permanence\n      </Typography>\n      <LineChart data={nbBeneficiariesAccountsData} colors={[\"white\"]}/>\n      <Typography variant=\"h5\" gutterBottom color=\"textPrimary\">\n        Nombre de comptes pros crées par permanence\n      </Typography>\n      <LineChart data={nbProAccountsData} colors={[\"#d35400\"]}/>\n      <Typography variant=\"h5\" gutterBottom color=\"textPrimary\">\n        Nombre de documents stockés par permanence\n      </Typography>\n      <LineChart data={nbStoredDocsData} colors={[\"#8e44ad\"]}/>\n    </Container>\n  );\n});\n\nexport default Charts;\n","import {\n  Button,\n  Chip,\n  Fab,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  TextField,\n  Typography\n} from \"@material-ui/core\";\nimport Container from \"@material-ui/core/Container\";\nimport ChartIcon from \"@material-ui/icons/BarChart\";\nimport HotelIcon from \"@material-ui/icons/House\";\nimport PeopleIcon from \"@material-ui/icons/PeopleAlt\";\nimport HomeWorkIcon from \"@material-ui/icons/Work\";\nimport React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport UseFetchDataEffect from \"../Hooks/UseFetchDataEffect\";\nimport { adminEndpoint, centersEndpoint, logoutEndpoint, makeRequest, tagsEndpoint } from \"../Services/requests\";\n\nconst StyledContent = styled.div`\n  padding-top: 50px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst StyledChipsContainer = styled.div`\n  display: flex;\n  margin-top: 16px;\n  margin-bottom: 16px;\n  justify-content: space-around;\n`;\n\n\nconst StyledListItemContent = styled.a`\n  background-color: #212121;\n  color: white;\n  cursor: pointer;\n  border-radius: 12px;\n  padding: 10px;\n`;\n\nconst ChartsButton = styled(Fab)`\n  position: absolute !important;\n  right: 10px;\n  top: 10px;\n`;\n\nconst Logout = styled(Button)`\n  position: absolute !important;\n  right: 100px;\n  top: 10px;\n`;\n\nconst Admin = styled(Button)`\n  position: absolute !important;\n  left: 50px;\n  top: 10px;\n`;\n\nconst Home = () => {\n  const history = useHistory();\n  const [centers, setCenters] = useState<any[]>([]);\n  const [tags, setTags] = useState<any[]>([]);\n  const [filteredCenters, setFilteredCenters] = useState<any[]>([]);\n\n  UseFetchDataEffect(centersEndpoint, (centers: any) => {\n    setCenters(centers['hydra:member']);\n    setFilteredCenters(centers['hydra:member'])\n  });\n  UseFetchDataEffect(tagsEndpoint, (data: any) => setTags(data['hydra:member']));\n\n  const searchCenters = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const search = event.target.value;\n    setFilteredCenters(centers.filter((center: any) =>\n      center.name.toLowerCase().includes(search.toLowerCase())\n    ));\n  }\n\n  const onClickTag = (id: number) => {\n    setFilteredCenters(centers.filter((center) =>\n      center.tags.includes(`/api/tags/${id}`)\n    ))\n  }\n\n  return (\n    <Container maxWidth=\"md\">\n      <StyledContent>\n        <Logout onClick={async () => {\n          await makeRequest(logoutEndpoint);\n          window.location.replace(`/`);\n        }}>\n          Déconnexion\n        </Logout>\n        <Admin\n          onClick={() => {\n            window.location.replace(adminEndpoint);\n          }}\n        >\n          Admin\n        </Admin>\n        <ChartsButton size=\"small\" color=\"primary\" aria-label=\"add\" onClick={() => history.push(\"/charts\")}>\n          <ChartIcon/>\n        </ChartsButton>\n        <Typography variant=\"h2\" component=\"h2\" gutterBottom color=\"textPrimary\">\n          Centres\n        </Typography>\n        <StyledChipsContainer>\n          {!tags ? null : tags.map((tag: any) => (\n            <Chip key={tag.id} label={tag.name} clickable color=\"secondary\" onClick={() => onClickTag(tag.id)}/>\n          ))}\n        </StyledChipsContainer>\n        <TextField id=\"outlined-basic\" label=\"Rechercher\" variant=\"outlined\" onChange={searchCenters}/>\n        <List dense={false}>\n          {!filteredCenters ? null : filteredCenters.map((center: any) => (\n            <ListItem key={center.id}>\n              <ListItemIcon>\n                <HotelIcon htmlColor=\"white\"/>\n              </ListItemIcon>\n              <ListItemText secondary={center.name}/>\n              {!center.permanence ? null :\n                <StyledListItemContent style={{\n                  textAlign: 'center',\n                  width: 200,\n                }} onClick={() => history.push(`/notes/${center.id}`)}>\n                  <PeopleIcon htmlColor=\"white\"/>\n                  <ListItemText primary=\"Permanences\"/>\n                </StyledListItemContent>\n              }\n              {!center.workshop ? null :\n                <StyledListItemContent style={{\n                  marginLeft: 8,\n                  textAlign: 'center',\n                  width: 200,\n                }} onClick={() => history.push(`/centers/${center.id}/workshops`)}>\n                  <HomeWorkIcon htmlColor=\"white\"/>\n                  <ListItemText primary=\"Ateliers\"/>\n                </StyledListItemContent>\n              }\n            </ListItem>\n          ))}\n        </List>\n      </StyledContent>\n    </Container>\n  );\n};\n\nexport default Home;\n","import Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport TextField from \"@material-ui/core/TextField\";\nimport LinkIcon from \"@material-ui/icons/Link\";\nimport { Formik, FormikProps } from \"formik\";\nimport * as React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { loginEndpoint, makeRequest, oauthEndpoint } from \"../Services/requests\";\nimport logo from \"../Images/logo.png\";\nimport { Typography } from \"@material-ui/core\";\n\nconst StyledImage = styled.img`\n  width: 140px;\n  height: 140px;\n  align-self: center;\n`;\n\nconst StyledImageContainer = styled.div`\n  padding-top: 50px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst StyledForm = styled.form`\n  padding-top: 100px;\n  margin-bottom: 200px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Login: React.FC = () => {\n  const history = useHistory();\n  const login = async (values: Object) => {\n    await makeRequest(loginEndpoint, \"POST\", values);\n    history.push(\"/\");\n  };\n\n  return (\n    <Container maxWidth=\"sm\">\n      <StyledImageContainer>\n        <Typography\n          variant=\"h3\"\n          component=\"h2\"\n          gutterBottom\n          color=\"textPrimary\"\n        >\n          Ma petite permanence\n        </Typography>\n        <StyledImage src={logo} alt=\"logo\"/>\n      </StyledImageContainer>\n      <Formik\n        initialValues={{email: \"\", password: \"\"}}\n        onSubmit={login}\n        render={(props: FormikProps<any>) => (\n          <StyledForm onSubmit={props.handleSubmit}>\n            <TextField\n              id=\"email\"\n              name=\"email\"\n              type=\"email\"\n              label=\"Email\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              onChange={props.handleChange}\n            />\n            {props.errors.email && (\n              <div id=\"feedback\">{props.errors.email}</div>\n            )}\n            <TextField\n              id=\"password\"\n              name=\"password\"\n              type=\"password\"\n              label=\"Password\"\n              margin=\"normal\"\n              variant=\"outlined\"\n              onChange={props.handleChange}\n            />\n            {props.errors.password && (\n              <div id=\"feedback\">{props.errors.password}</div>\n            )}\n            <Button variant=\"outlined\" color=\"primary\" type=\"submit\">\n              Login\n            </Button>\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              style={{marginTop: 50, marginBottom: 100, fontSize: 20}}\n              href={oauthEndpoint}\n            >\n              <LinkIcon style={{marginRight: 20}}/>\n              Me connecter avec Reconnect Pro\n            </Button>\n          </StyledForm>\n        )}\n      />\n    </Container>\n  );\n};\n\nexport default Login;\n","import DateFnsUtils from '@date-io/date-fns';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport TextField from '@material-ui/core/TextField';\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport { Formik, FormikProps } from 'formik';\nimport * as React from 'react';\nimport styled from 'styled-components';\nimport NotesContext from '../../../Context/NotesContext';\nimport { makeRequest, notesEndpoint } from '../../../Services/requests';\n\nconst StyledForm = styled.form`\n  margin-bottom: 100px;\n  display: flex;\n  flex-direction: column;\n`;\n\ninterface NoteInterface {\n  date: Date;\n  center: string;\n  hours: number;\n  nbPros: number;\n  nbProAccounts: number;\n  nbBeneficiaries: number;\n  nbBeneficiariesAccounts: number;\n  nbStoredDocs: number;\n  beneficiariesNotes: string;\n  proNotes: string;\n  reconnectNotes: string;\n}\n\nconst CreateNoteForm: any = ({centerId, closeModal}: any) => {\n    const {notes, setNotes} = React.useContext(NotesContext);\n    const [selectedDate, setSelectedDate] = React.useState(new Date());\n\n    const create = async (note: NoteInterface) => {\n      const response = await makeRequest(notesEndpoint, \"POST\", note);\n      closeModal();\n      setNotes([response.data, ...notes]);\n    }\n\n    function handleDateChange(date: any) {\n      setSelectedDate(date);\n    }\n\n    return (\n      <Container maxWidth='sm'>\n        <Formik\n          initialValues={{\n            date: new Date(),\n            center: '',\n            hours: 0,\n            attendees: '',\n            place: '',\n            nbPros: 0,\n            nbProAccounts: 0,\n            nbBeneficiaries: 0,\n            nbBeneficiariesAccounts: 0,\n            nbStoredDocs: 0,\n            beneficiariesNotes: '',\n            proNotes: '',\n            reconnectNotes: '',\n          }}\n          onSubmit={(values: NoteInterface) => {\n            create({...values, date: selectedDate, center: `/api/centers/${centerId}`});\n          }}\n          render={(props: FormikProps<any>) => (\n            <StyledForm onSubmit={props.handleSubmit}>\n              <div style={{display: 'flex'}}>\n                <div style={{flex: 1}}>\n                  <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                    <KeyboardDatePicker\n                      disableToolbar\n                      format='dd/MM/yyyy'\n                      margin='normal'\n                      id='date-picker-inline'\n                      label='Date'\n                      onChange={handleDateChange}\n                      variant='inline'\n                      value={selectedDate}\n                      KeyboardButtonProps={{\n                        'aria-label': 'change date',\n                      }}\n                    />\n                  </MuiPickersUtilsProvider>\n                </div>\n                <div\n                  style={{flex: 1, alignItems: 'center', justifyContent: 'center', display: 'flex'}}\n                >\n                  <TextField\n                    id='hours'\n                    label=\"Nombre d'heures\"\n                    name='hours'\n                    onChange={props.handleChange}\n                    type='number'\n                    variant='outlined'\n                  />\n                </div>\n              </div>\n              <div style={{height: 16}}/>\n              <div style={{display: 'flex'}}>\n                <div\n                  style={{flex: 1, alignItems: 'center', justifyContent: 'center', display: 'flex'}}\n                >\n                  <TextField\n                    id='nb-pros'\n                    label='Nb pros rencontrés'\n                    name='nbPros'\n                    onChange={props.handleChange}\n                    type='number'\n                    variant='outlined'\n                  />\n                </div>\n                <div\n                  style={{flex: 1, alignItems: 'center', justifyContent: 'center', display: 'flex'}}\n                >\n                  <TextField\n                    id='nb-pro-accounts'\n                    label='Nb comptes pros crées'\n                    name='nbProAccounts'\n                    onChange={props.handleChange}\n                    type='number'\n                    variant='outlined'\n                  />\n                </div>\n              </div>\n              <div style={{height: 16}}/>\n              <div style={{display: 'flex'}}>\n                <div\n                  style={{flex: 1, alignItems: 'center', justifyContent: 'center', display: 'flex'}}\n                >\n                  <TextField\n                    id='nb-beneficiaries'\n                    label='Nb benefs rencontrés'\n                    name='nbBeneficiaries'\n                    onChange={props.handleChange}\n                    type='number'\n                    variant='outlined'\n                  />\n                </div>\n                <div style={{width: 8}}/>\n                <div\n                  style={{flex: 1, alignItems: 'center', justifyContent: 'center', display: 'flex'}}\n                >\n                  <TextField\n                    id='nb-beneficiaries-accounts'\n                    label='Nb comptes benef crées'\n                    name='nbBeneficiariesAccounts'\n                    onChange={props.handleChange}\n                    type='number'\n                    variant='outlined'\n                  />\n                </div>\n                <div style={{width: 8}}/>\n                <div\n                  style={{flex: 1, alignItems: 'center', justifyContent: 'center', display: 'flex'}}\n                >\n                  <TextField\n                    id='nb-docs-stored'\n                    label='Nb doc stockés'\n                    name='nbStoredDocs'\n                    onChange={props.handleChange}\n                    type='number'\n                    variant='outlined'\n                  />\n                </div>\n              </div>\n              <TextField\n                id='attendees'\n                name='attendees'\n                type='text'\n                label='Qui a fait la perm'\n                margin='normal'\n                variant='outlined'\n                onChange={props.handleChange}\n              />\n              {props.errors.attendees && <div id='feedback'>{props.errors.attendees}</div>}\n              <TextField\n                id='place'\n                name='place'\n                type='text'\n                label='Lieu (optionnel)'\n                margin='normal'\n                variant='outlined'\n                value={props.values.place}\n                onChange={props.handleChange}\n              />\n              {props.errors.place && <div id='feedback'>{props.errors.place}</div>}\n              <TextField\n                id='beneficiaries-notes'\n                name='beneficiariesNotes'\n                type='text'\n                label='Remarques en rapport avec les bénéficiaires'\n                margin='normal'\n                variant='outlined'\n                multiline\n                rows='4'\n                onChange={props.handleChange}\n              />\n              {props.errors.beneficiariesNotes && (\n                <div id='feedback'>{props.errors.beneficiariesNotes}</div>\n              )}\n              <TextField\n                id='pro-notes'\n                name='proNotes'\n                type='text'\n                label='Remarques en rapport avec les professionnels'\n                margin='normal'\n                variant='outlined'\n                multiline\n                rows='4'\n                onChange={props.handleChange}\n              />\n              {props.errors.proNotes && <div id='feedback'>{props.errors.proNotes}</div>}\n              <TextField\n                id='reconnect-notes'\n                name='reconnectNotes'\n                type='text'\n                label='Remarques en rapport avec Reconnect'\n                margin='normal'\n                variant='outlined'\n                multiline\n                rows='4'\n                onChange={props.handleChange}\n              />\n              {props.errors.reconnectNotes && <div id='feedback'>{props.errors.reconnectNotes}</div>}\n              <Button variant='contained' color='primary' type='submit'>\n                Créer\n              </Button>\n            </StyledForm>\n          )}\n        />\n      </Container>\n    );\n  }\n;\n\nexport default CreateNoteForm;\n","import DateFnsUtils from '@date-io/date-fns';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport TextField from '@material-ui/core/TextField';\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport { Formik, FormikProps } from 'formik';\nimport * as React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport styled from 'styled-components';\nimport NotesContext from '../../../Context/NotesContext';\nimport { makeRequest, notesEndpoint } from '../../../Services/requests';\n\nconst StyledForm = styled.form`\n  margin-bottom: 100px;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport interface NoteInterface {\n  id: number;\n  date: Date;\n  center: string;\n  hours: number;\n  attendees: string;\n  place: string;\n  nbPros: number;\n  nbProAccounts: number;\n  nbBeneficiaries: number;\n  nbBeneficiariesAccounts: number;\n  nbStoredDocs: number;\n  beneficiariesNotes: string;\n  proNotes: string;\n  reconnectNotes: string;\n}\n\nconst EditNoteForm: any = withRouter(({centerId, closeModal, note}: any) => {\n  const {setNotes, notes} = React.useContext(NotesContext);\n\n  const update = async (note: NoteInterface) => {\n    const response = await makeRequest(`${notesEndpoint}/${note.id}`, \"PUT\", note)\n    closeModal();\n    setNotes(notes.map((note: any) => {\n      return note.id === response.data.id ? response.data : note;\n    }))\n  };\n\n  const [selectedDate, setSelectedDate] = React.useState(new Date());\n\n  function handleDateChange(date: any) {\n    setSelectedDate(date);\n  }\n\n  return (\n    <Container maxWidth='sm'>\n      <Formik\n        enableReinitialize\n        initialValues={note}\n        onSubmit={(values: any) => {\n          update({\n            ...values,\n            date: selectedDate,\n            center: `/api/centers/${centerId}`,\n          });\n        }}\n      >\n        {(props: FormikProps<any>) => {\n          return (\n            <StyledForm onSubmit={props.handleSubmit}>\n              <div style={{display: 'flex'}}>\n                <div style={{flex: 1}}>\n                  <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                    <KeyboardDatePicker\n                      disableToolbar\n                      format='dd/MM/yyyy'\n                      margin='normal'\n                      id='date-picker-inline'\n                      label='Date'\n                      onChange={handleDateChange}\n                      variant='inline'\n                      value={selectedDate}\n                      KeyboardButtonProps={{\n                        'aria-label': 'change date',\n                      }}\n                    />\n                  </MuiPickersUtilsProvider>\n                </div>\n                <div\n                  style={{\n                    flex: 1,\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    display: 'flex',\n                  }}\n                >\n                  <TextField\n                    id='hours'\n                    label=\"Nombre d'heures\"\n                    name='hours'\n                    onChange={props.handleChange}\n                    value={props.values.hours}\n                    type='number'\n                    variant='outlined'\n                  />\n                </div>\n              </div>\n              <div style={{height: 16}}/>\n              <div style={{display: 'flex'}}>\n                <div\n                  style={{\n                    flex: 1,\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    display: 'flex',\n                  }}\n                >\n                  <TextField\n                    id='nb-pros'\n                    label='Nb pros rencontrés'\n                    name='nbPros'\n                    onChange={props.handleChange}\n                    type='number'\n                    value={props.values.nbPros}\n                    variant='outlined'\n                  />\n                </div>\n                <div\n                  style={{\n                    flex: 1,\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    display: 'flex',\n                  }}\n                >\n                  <TextField\n                    id='nb-pro-accounts'\n                    label='Nb comptes pros crées'\n                    name='nbProAccounts'\n                    onChange={props.handleChange}\n                    value={props.values.nbProAccounts}\n                    type='number'\n                    variant='outlined'\n                  />\n                </div>\n              </div>\n              <div style={{height: 16}}/>\n              <div style={{display: 'flex'}}>\n                <div\n                  style={{\n                    flex: 1,\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    display: 'flex',\n                  }}\n                >\n                  <TextField\n                    id='nb-beneficiaries'\n                    label='Nb benefs rencontrés'\n                    name='nbBeneficiaries'\n                    onChange={props.handleChange}\n                    type='number'\n                    value={props.values.nbBeneficiaries}\n                    variant='outlined'\n                  />\n                </div>\n                <div style={{width: 8}}/>\n                <div\n                  style={{\n                    flex: 1,\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    display: 'flex',\n                  }}\n                >\n                  <TextField\n                    id='nb-beneficiaries-accounts'\n                    label='Nb comptes benef crées'\n                    name='nbBeneficiariesAccounts'\n                    value={props.values.nbBeneficiariesAccounts}\n                    onChange={props.handleChange}\n                    type='number'\n                    variant='outlined'\n                  />\n                </div>\n                <div style={{width: 8}}/>\n                <div\n                  style={{\n                    flex: 1,\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    display: 'flex',\n                  }}\n                >\n                  <TextField\n                    id='nb-docs-stored'\n                    label='Nb doc stockés'\n                    name='nbStoredDocs'\n                    onChange={props.handleChange}\n                    value={props.values.nbStoredDocs}\n                    type='number'\n                    variant='outlined'\n                  />\n                </div>\n              </div>\n              <TextField\n                id='attendees'\n                name='attendees'\n                type='text'\n                label='Qui a fait la perm'\n                margin='normal'\n                variant='outlined'\n                value={props.values.attendees}\n                onChange={props.handleChange}\n              />\n              {props.errors.attendees && <div id='feedback'>{props.errors.attendees}</div>}\n              <TextField\n                id='place'\n                name='place'\n                type='text'\n                label='Lieu (optionnel)'\n                margin='normal'\n                variant='outlined'\n                value={props.values.place}\n                onChange={props.handleChange}\n              />\n              {props.errors.place && <div id='feedback'>{props.errors.place}</div>}\n              <TextField\n                id='beneficiaries-notes'\n                name='beneficiariesNotes'\n                type='text'\n                label='Remarques en rapport avec les bénéficiaires'\n                margin='normal'\n                variant='outlined'\n                multiline\n                rows='4'\n                value={props.values.beneficiariesNotes}\n                onChange={props.handleChange}\n              />\n              {props.errors.beneficiariesNotes && (\n                <div id='feedback'>{props.errors.beneficiariesNotes}</div>\n              )}\n              <TextField\n                id='pro-notes'\n                name='proNotes'\n                type='text'\n                label='Remarques en rapport avec les professionnels'\n                margin='normal'\n                variant='outlined'\n                value={props.values.proNotes}\n                multiline\n                rows='4'\n                onChange={props.handleChange}\n              />\n              {props.errors.proNotes && <div id='feedback'>{props.errors.proNotes}</div>}\n              <TextField\n                id='reconnect-notes'\n                name='reconnectNotes'\n                value={props.values.reconnectNotes}\n                type='text'\n                label='Remarques en rapport avec Reconnect'\n                margin='normal'\n                variant='outlined'\n                multiline\n                rows='4'\n                onChange={props.handleChange}\n              />\n              {props.errors.reconnectNotes && (\n                <div id='feedback'>{props.errors.reconnectNotes}</div>\n              )}\n              <Button variant='contained' color='primary' type='submit'>\n                Mettre à jour\n              </Button>\n            </StyledForm>\n          );\n        }}\n      </Formik>\n    </Container>\n  );\n});\n\nexport default EditNoteForm;\n","import { Avatar, Card, CardContent, Chip, Fab, Typography } from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { format } from 'date-fns';\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst StyledCard = styled(Card)`\n  margin-bottom: 10px;\n`;\n\nconst EditNote = styled(Fab)`\n  position: absolute !important;\n  right: 10px;\n  top: 10px;\n`;\n\nconst StyledChip = styled(Chip)`\n  margin: 8px;\n`;\n\nconst Note = withRouter(({history, match, note, editNote}: any) => {\n  return (\n    <StyledCard key={note.id}>\n      <CardContent style={{position: 'relative', backgroundColor: '#212121'}}>\n        <EditNote\n          size='small'\n          color='primary'\n          aria-label='add'\n          onClick={() => editNote(note.id)}\n        >\n          <EditIcon/>\n        </EditNote>\n        <Typography color='textPrimary' gutterBottom>\n          Date : {format(new Date(note.date), 'dd-MM-yyyy')}\n        </Typography>\n        <Typography variant='body2' component='p'>\n          Durée : {note.hours} h\n        </Typography>\n        {!note.attendees ? null : (\n          <Typography variant='body2' component='p'>\n            Participants : {note.attendees}\n          </Typography>\n        )}\n        {!note.place ? null : (\n          <Typography variant='body2' component='p'>\n            Lieu : {note.place}\n          </Typography>\n        )}\n        <StyledChip\n          avatar={<Avatar>{note.nbPros}</Avatar>}\n          label='Professionnels rencontrés'\n        />\n        <StyledChip\n          avatar={<Avatar>{note.nbProAccounts}</Avatar>}\n          label='Comptes pro crées'\n        />\n        <StyledChip\n          avatar={<Avatar>{note.nbBeneficiaries}</Avatar>}\n          label='Bénéficiaires rencontrés'\n        />\n        <StyledChip\n          avatar={<Avatar>{note.nbBeneficiariesAccounts}</Avatar>}\n          label='Comptes bénéficiaires crées'\n        />\n        <StyledChip avatar={<Avatar>{note.nbStoredDocs}</Avatar>} label='Documents stockés'/>\n        <Typography variant='subtitle1'>Remarques concernant les bénéficiaires</Typography>\n        <Typography variant='body2' component='p'>\n          {note.beneficiariesNotes}\n        </Typography>\n        <Typography variant='subtitle1'>Remarques concernant les professionnels</Typography>\n        <Typography variant='body2' component='p'>\n          {note.proNotes}\n        </Typography>\n        <Typography variant='subtitle1'>Remarques concernant Reconnect</Typography>\n        <Typography variant='body2' component='p'>\n          {note.reconnectNotes}\n        </Typography>\n      </CardContent>\n    </StyledCard>\n  );\n});\n\nexport default Note;\n","import {\n  Button,\n  Container,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Divider,\n  Fab,\n  Typography\n} from '@material-ui/core';\nimport Pagination from '@material-ui/lab/Pagination';\nimport AddIcon from '@material-ui/icons/Add';\nimport React, { useContext } from 'react';\nimport { useBoolean } from 'react-hanger';\nimport { useNumber } from 'react-hanger/array';\nimport { withRouter } from 'react-router-dom';\nimport styled from 'styled-components';\nimport NotesContext from '../../Context/NotesContext';\nimport { centersEndpoint, notesEndpoint, paginationCount } from '../../Services/requests';\nimport CreateNoteForm from './Components/CreateNoteForm';\nimport EditNoteForm from './Components/EditNoteForm';\nimport Note from './Note';\nimport UseFetchDataEffect from \"../../Hooks/UseFetchDataEffect\";\nimport UseFetchData from \"../../Hooks/UseFetchData\";\nimport { Center } from \"../../Types/Center\";\n\nconst StyledContent = styled.div`\n  margin-top: 50px;\n  display: flex;\n  flex-direction: column;\n  color: whitesmoke;\n`;\n\nconst PaginationContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 32px;\n  margin-bottom: 32px;\n`;\n\nconst Header = styled.div`\n  display: flex;\n  position: relative;\n`;\n\nconst NotesTitle = styled(Typography)`\n  flex: 1;\n`;\n\nconst HeaderContent = styled.div`\n  position: relative;\n  align-self: stretch;\n  flex: 1;\n`;\n\nconst AddNoteIcon = styled(Fab)`\n  position: absolute;\n  right: 0;\n`;\n\nconst Notes = withRouter(({history, match}: any) => {\n  const isModalOpen = useBoolean(false);\n  const isEditModalOpen = useBoolean(false);\n  const [idNoteBeingEdited, noteIdActions] = useNumber(0);\n  const [notesCount, notesCountActions] = useNumber(0);\n  const [currentPage, currentPageActions] = useNumber(1);\n  const {centerId} = match.params;\n  const {notes, setNotes} = useContext(NotesContext);\n  const [center, setCenter] = React.useState<Center>({});\n\n  UseFetchDataEffect(`${centersEndpoint}/${centerId}`, setCenter);\n  const fetchNotes = UseFetchData(`${notesEndpoint}?center=${centerId}&page=${currentPage}`, (data: any) => {\n    notesCountActions.setValue(data['hydra:totalItems'])\n    setNotes(data['hydra:member']);\n  });\n  React.useEffect(() => {\n    fetchNotes();\n  }, [fetchNotes])\n\n  const editNote = (id: number) => {\n    noteIdActions.setValue(id);\n    isEditModalOpen.setTrue();\n  };\n\n  return (\n    <Container maxWidth='sm'>\n      <Dialog\n        fullScreen\n        open={isModalOpen.value}\n        onClose={isModalOpen.setFalse}\n        aria-labelledby='form-dialog-title'\n      >\n        <DialogTitle id='form-dialog-title'>Créer une note</DialogTitle>\n        <DialogContent>\n          <CreateNoteForm centerId={centerId} closeModal={isModalOpen.setFalse}/>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={isModalOpen.setFalse} color='primary'>\n            Annuler\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Dialog\n        fullScreen\n        open={isEditModalOpen.value}\n        onClose={isEditModalOpen.setFalse}\n        aria-labelledby='edit-note'\n      >\n        <DialogTitle id='edit-note'>Modifier la note</DialogTitle>\n        <DialogContent>\n          <EditNoteForm\n            centerId={centerId}\n            note={notes.find(note => note.id === idNoteBeingEdited)}\n            closeModal={isEditModalOpen.setFalse}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={isEditModalOpen.setFalse} color='primary'>\n            Annuler\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <StyledContent>\n        {!center ? null : (\n          <>\n            <NotesTitle variant='h4' gutterBottom color='textPrimary'>\n              {center.name}\n            </NotesTitle>\n            <Typography>Nb permanences: {!center.notes ? 0 : center.notes.length}</Typography>\n            <Typography>Nb bénef rencontrés: {center.beneficiaryCount}</Typography>\n            <Typography>Nb CFN crées: {center.createdBeneficiaryCount}</Typography>\n            <Typography>Nb docs stockés: {center.documentsCount}</Typography>\n          </>\n        )}\n        <br/>\n        <Header>\n          <Divider/>\n          <HeaderContent>\n            <Divider/>\n            <NotesTitle variant='h4' gutterBottom color='textPrimary'>\n              Permanences\n            </NotesTitle>\n            <AddNoteIcon\n              size='medium'\n              color='primary'\n              aria-label='add'\n              onClick={isModalOpen.setTrue}\n            >\n              <AddIcon/>\n            </AddNoteIcon>\n          </HeaderContent>\n        </Header>\n        <PaginationContainer>\n          <Pagination\n            count={Math.ceil(notesCount / paginationCount)}\n            variant=\"outlined\"\n            page={currentPage}\n            onChange={(event: any, value: any) => currentPageActions.setValue(value)}\n          />\n        </PaginationContainer>\n        {notes.map((note: any) => (\n          <Note note={note} key={note.id} editNote={editNote}/>\n        ))}\n      </StyledContent>\n    </Container>\n  );\n});\n\nexport default Notes;\n","import DateFnsUtils from '@date-io/date-fns';\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport React from 'react';\n\n\nconst DatePickerField = ({label, handleChange, value}: any) => (\n  <MuiPickersUtilsProvider utils={DateFnsUtils}>\n    <KeyboardDatePicker\n      disableToolbar\n      format='dd/MM/yyyy'\n      margin='normal'\n      id='date-picker-inline'\n      label={label}\n      onChange={handleChange}\n      variant='inline'\n      value={value}\n      KeyboardButtonProps={{\n        'aria-label': 'change date',\n      }}\n    />\n  </MuiPickersUtilsProvider>\n);\n\nexport default DatePickerField;\n","import { Dropdown, Dropdowns } from \"../Types/Dropdowns\";\n\nexport function getDropdownNameFromIri(dropdown: Dropdown, iri: string) {\n  return dropdown[iri] ? dropdown[iri].name : '';\n}\n\nexport function getDropdownValues(dropdowns: Dropdowns, type: string) {\n  return dropdowns[type] ? dropdowns[type] : {}\n}\n\nexport function getDropdownOptionsArray(dropdowns: Dropdowns, type: string) {\n  const dropdownValues = getDropdownValues(dropdowns, type);\n\n  return Object.keys(dropdownValues).map((iri: string) => ({\n    ...dropdownValues[iri], '@id': iri,\n  }));\n}\n","import Chip from '@material-ui/core/Chip';\nimport FormControl from '@material-ui/core/FormControl';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport React, { useContext } from 'react';\nimport DropdownsContext from \"../Context/DropdownsContext\";\nimport { getDropdownOptionsArray } from \"../Services/dropdowns\";\n\nconst MultiSelectField = ({id, label, value, setFieldValue}: any) => {\n  const {dropdowns} = useContext(DropdownsContext);\n  const dropdownOptions = getDropdownOptionsArray(dropdowns, id);\n  const options = !dropdownOptions ? [] : dropdownOptions;\n\n  return (\n    <FormControl style={{flex: 1}}>\n      <InputLabel id={id}>{label}</InputLabel>\n      <Select\n        labelId={id}\n        id={id}\n        multiple\n        value={!value ? [] : value}\n        onChange={(event) => {\n          setFieldValue(id, event.target.value);\n        }}\n        input={<Input id={id}/>}\n        renderValue={(selected: any) => (\n          <div>\n            {selected.map((value: any) => {\n              const selectedOption = options.find((option: any) => {\n                return option['@id'] === value;\n              });\n\n              return (\n                <Chip key={value} label={!selectedOption ? '' : selectedOption.name}/>\n              );\n            })}\n          </div>\n        )}\n      >\n        {options.map((option: any) => (\n          <MenuItem key={option['@id']} value={option['@id']}>\n            {option.name}\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  );\n}\n\nexport default MultiSelectField;\n","import TextField from '@material-ui/core/TextField';\nimport React from 'react';\n\nconst NumberField = ({id, label, handleChange, value}: any) => (\n    <TextField\n        id={id}\n        label={label}\n        name={id}\n        onChange={handleChange}\n        type='number'\n        variant='outlined'\n        style={{marginLeft: 8, marginRight: 8, flex: 1}}\n        value={value}\n    />\n);\n\nexport default NumberField;\n","import React from 'react';\nimport styled from \"styled-components\";\n\ninterface FormRowProps {\n  children: React.ReactNode;\n}\n\nconst StyledFormRow = styled.div`\n  display: flex;\n  margin-top: 16px;\n`;\n\nconst FormRow: React.FC<FormRowProps> = ({children}) => {\n  return <StyledFormRow>{children}</StyledFormRow>\n}\n\nexport default FormRow;\n","import React, { useContext } from 'react';\nimport { FormControl, InputLabel, MenuItem, Select } from '@material-ui/core';\nimport DropdownsContext from '../Context/DropdownsContext';\nimport { getDropdownOptionsArray } from '../Services/dropdowns';\n\nconst SelectField = ({id, label, value, setFieldValue, required}: any) => {\n  const {dropdowns} = useContext(DropdownsContext);\n  const dropdownOptions = getDropdownOptionsArray(dropdowns, `${id}s`);\n  const options = !dropdownOptions ? [] : dropdownOptions;\n\n  return (\n    <FormControl style={{flex: 1}}>\n      <InputLabel id={id}>{label}</InputLabel>\n      <Select\n        labelId={id}\n        id={id}\n        value={!value ? [] : value}\n        required={required}\n        onChange={(event) => {\n          setFieldValue(id, event.target.value);\n        }}\n      >\n        {options.map((option: any) => (\n          <MenuItem key={option['@id']} value={option['@id']}>\n            {option.name}\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  )\n}\n\nexport default SelectField;\n","import { Checkbox, Chip, FormControlLabel, FormGroup } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Formik, FormikProps } from 'formik';\nimport React, { useContext } from 'react';\nimport DatePickerField from '../../../Components/DatePickerField';\nimport MultiSelectField from '../../../Components/MultiSelectField';\nimport NumberField from '../../../Components/NumberField';\nimport { WorkshopInterface } from '../../../Types/Workshops';\nimport { useBoolean } from \"react-hanger/array\";\nimport DropdownsContext from \"../../../Context/DropdownsContext\";\nimport { getDropdownNameFromIri, getDropdownOptionsArray, getDropdownValues } from \"../../../Services/dropdowns\";\nimport FormRow from \"../../../Components/FormRow\";\nimport { useHistory } from \"react-router-dom\";\nimport SelectField from '../../../Components/SelectField';\n\ninterface WorkshopFormProps {\n  workshop: WorkshopInterface;\n  onSubmit: Function;\n}\n\nconst WorkshopForm: React.FC<WorkshopFormProps> = ({workshop, onSubmit}) => {\n  const history = useHistory();\n  const [selectedDate, setSelectedDate] = React.useState(new Date());\n  const [loading, loadingActions] = useBoolean(false);\n  const {dropdowns} = useContext(DropdownsContext);\n  const allSkills = getDropdownValues(dropdowns, 'skills');\n  const allSkillsArray = getDropdownOptionsArray(dropdowns, 'skills');\n\n  const addSkillsSuggestions = (skills: string[], topicIris: string[]) => {\n    const newSkills = skills;\n    topicIris.reduce((accumulator: any, topicIri: string) => ([\n        ...accumulator, ...allSkillsArray.filter((skill: any) => skill['topic']['@id'] === topicIri)]\n    ), []).forEach((topic: any) => {\n      if (!newSkills.includes(topic['@id'])) {\n        newSkills.push(topic['@id']);\n      }\n    });\n\n    return newSkills;\n  }\n\n  return (\n    <Formik\n      initialValues={workshop}\n      onSubmit={async (data) => {\n        loadingActions.setTrue();\n        await onSubmit(data);\n        setTimeout(() => {\n          loadingActions.setFalse();\n          history.goBack();\n        }, 500);\n      }}\n      render={({handleChange, handleSubmit, values, setFieldValue}: FormikProps<any>) => (\n        <form onSubmit={handleSubmit}>\n          <FormRow>\n            <DatePickerField label=\"Date\" handleChange={setSelectedDate} value={selectedDate}/>\n            <NumberField id='nbParticipants' value={values.nbParticipants} label=\"Nombre de participants\"\n                         handleChange={handleChange}/>\n          </FormRow>\n          <FormRow>\n            <SelectField\n            id='duration'\n            label='Durée'\n            value={values.duration}\n            setFieldValue={setFieldValue}\n            required={true}\n            />\n            <TextField\n              value={values.attendees}\n              label=\"Qui a animé l'atelier\"\n              name='attendees'\n              type='text'\n              variant='outlined'\n              required={true}\n              onChange={handleChange}\n              style={{marginLeft: 8, marginRight: 8, flex: 1}}\n            />\n          </FormRow>\n          <FormRow>\n            <MultiSelectField\n              id=\"topics\"\n              label=\"Thèmes\"\n              value={values.topics}\n              setFieldValue={(_id: string, topicIris: string[]) => {\n                setFieldValue('topics', topicIris);\n                setFieldValue('skills', addSkillsSuggestions(values.skills, topicIris));\n              }}\n            />\n          </FormRow>\n          <FormRow>\n            <div>\n              {values.skills.map((skill: string) => (\n                <Chip key={skill} label={getDropdownNameFromIri(allSkills, skill)} variant=\"outlined\" onDelete={() =>\n                  setFieldValue('skills', values.skills.filter((currentSkill: string) => currentSkill !== skill))}\n                />\n              ))}\n            </div>\n          </FormRow>\n          <FormRow>\n            <MultiSelectField\n              id=\"participantKinds\"\n              label=\"Types de participants\"\n              value={values.participantKinds}\n              setFieldValue={setFieldValue}\n            />\n          </FormRow>\n          <FormRow>\n            <MultiSelectField\n              id=\"ageBreakpoints\"\n              label=\"Tranches d'âge\"\n              value={values.ageBreakpoints}\n              setFieldValue={setFieldValue}\n            />\n          </FormRow>\n          <FormRow>\n            <MultiSelectField\n              id=\"usedEquipments\"\n              label=\"Outils utilisés\"\n              value={values.usedEquipments}\n              setFieldValue={setFieldValue}\n            />\n          </FormRow>\n          <FormRow>\n            <MultiSelectField\n              id=\"equipmentSuppliers\"\n              label=\"Equipement fourni par\"\n              value={values.equipmentSuppliers}\n              setFieldValue={setFieldValue}\n            />\n          </FormRow>\n          <FormRow>\n            <TextField\n              value={values.globalReport}\n              label=\"Bilan global\"\n              name='globalReport'\n              type='text'\n              variant='outlined'\n              multiline rows='4'\n              onChange={handleChange}\n              style={{flex: 1}}\n            />\n          </FormRow>\n          <FormRow>\n            <TextField\n              value={values.improvementAxis}\n              label=\"Axes d'amélioration\"\n              name='improvementAxis'\n              type='text'\n              variant='outlined'\n              multiline rows='4'\n              onChange={handleChange}\n              style={{flex: 1}}\n            />\n          </FormRow>\n          <FormRow>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  value={values.usedVault}\n                  onChange={(event, value) => {\n                    setFieldValue('usedVault', value)\n                  }}\n                  color='primary'\n                />\n              } label={<span style={{color: 'white'}}>Coffre-fort numérique</span>}/>\n          </FormRow>\n          {!values.usedVault ? null : (\n            <FormGroup>\n              <FormRow>\n                <NumberField id=\"nbBeneficiariesAccounts\" value={values.nbBeneficiariesAccounts}\n                             label=\"Nombre de cfn crées\"\n                             handleChange={handleChange}/>\n                <NumberField id=\"nbStoredDocs\" value={values.nbStoredDocs} label=\"Nombre de documents stockés\"\n                             handleChange={handleChange}/>\n              </FormRow>\n              <FormRow>\n                <NumberField id=\"nbCreatedEvents\" value={values.nbCreatedEvents} label=\"Évènements ajoutés\"\n                             handleChange={handleChange}/>\n                <NumberField id=\"nbCreatedContacts\" value={values.nbCreatedContacts} label=\"Contacts ajoutés\"\n                             handleChange={handleChange}/>\n                <NumberField id=\"nbCreatedNotes\" value={values.nbCreatedNotes} label=\"Notes ajoutées\"\n                             handleChange={handleChange}/>\n              </FormRow>\n            </FormGroup>\n          )}\n          <FormRow>\n            {loading\n              ?\n              <Button variant='contained' color='primary' disabled={true} style={{marginLeft: 'auto'}}><CircularProgress\n                size={20}/></Button>\n              : <Button variant='contained' color='primary' type='submit' style={{marginLeft: 'auto'}}>\n                {workshop.id ? \"Mettre à jour\" : \"Créer\"}</Button>\n            }\n          </FormRow>\n        </form>\n      )}\n    />\n  );\n}\n\nexport default WorkshopForm;\n","import Container from '@material-ui/core/Container';\nimport React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport UseFetchDataEffect from '../../Hooks/UseFetchDataEffect';\nimport { buildEntityEndpoint, workshopsEndpoint } from '../../Services/requests';\nimport { WorkshopInterface } from '../../Types/Workshops';\nimport WorkshopForm from './Components/WorkshopForm';\nimport UseFetchData from \"../../Hooks/UseFetchData\";\n\nconst EditWorkshop = () => {\n  const {workshopId} = useParams();\n  const [workshop, setWorkshop] = useState<WorkshopInterface | null>(null);\n  const entityUrl = !workshop ? '' : buildEntityEndpoint(workshop);\n\n  UseFetchDataEffect(`${workshopsEndpoint}/${parseInt(workshopId)}`, setWorkshop);\n  const updateWorkshop = UseFetchData(entityUrl, () => {}, 'PUT');\n\n  return (\n    <Container maxWidth='sm'>\n      {null === workshop ? <></> : <WorkshopForm workshop={workshop} onSubmit={updateWorkshop}/>}\n    </Container>\n  )\n}\n\nexport default EditWorkshop;\n","import { Chip } from '@material-ui/core';\nimport React, { useContext } from 'react';\nimport DropdownsContext from \"../Context/DropdownsContext\";\nimport { getDropdownNameFromIri, getDropdownValues } from \"../Services/dropdowns\";\n\ninterface ChipListProps {\n  list: string[];\n  dropdownKind?: string;\n}\n\nconst ChipList: React.FC<ChipListProps> = ({list, dropdownKind}) => {\n  const {dropdowns} = useContext(DropdownsContext);\n  const dropdown = !dropdownKind ? {} : getDropdownValues(dropdowns, dropdownKind);\n\n  return (\n    <>\n      {list.map((listItem: string) => (\n        <Chip key={listItem} label={getDropdownNameFromIri(dropdown, listItem)} variant='outlined'/>\n      ))}\n    </>\n  );\n}\n\nexport default ChipList;\n","import React, {useContext} from 'react';\nimport DropdownsContext from '../Context/DropdownsContext';\nimport {getDropdownNameFromIri, getDropdownValues} from '../Services/dropdowns';\n\nconst DropdownSingleValue = ({iri, dropdownKind}: any) => {\n  const {dropdowns} = useContext(DropdownsContext);\n  const dropdown = !dropdownKind ? {} : getDropdownValues(dropdowns, dropdownKind);\n\n  return (\n      <span>{getDropdownNameFromIri(dropdown, iri)}</span>\n  );\n}\n\nexport default DropdownSingleValue;\n","import {Card, CardContent, Fab, Typography} from '@material-ui/core';\nimport { format } from 'date-fns';\nimport React from 'react';\nimport styled from 'styled-components';\nimport ChipList from '../../Components/ChipList';\nimport DropdownSingleValue from '../../Components/DropdownSingleValue';\nimport EditIcon from \"@material-ui/icons/Edit\";\n\nconst StyledCard = styled(Card)`\n  margin-bottom: 10px;\n`;\n\nconst EditWorkshop = styled(Fab)`\n  position: absolute !important;\n  right: 10px;\n  top: 10px;\n`;\n\nconst Workshop = ({workshop, editWorkshop}: any) => (\n  <StyledCard>\n    <CardContent style={{position: 'relative', backgroundColor: '#212121'}}>\n      <EditWorkshop\n        size='small'\n        color='primary'\n        aria-label='add'\n        onClick={() => {editWorkshop(workshop)}}\n      >\n        <EditIcon/>\n      </EditWorkshop>\n      <Typography color='textPrimary' gutterBottom>\n        Date : {format(new Date(workshop.date), 'dd-MM-yyyy')}\n      </Typography>\n      <Typography>\n        Qui a animé l'atelier : {workshop.attendees}\n      </Typography>\n      <Typography>\n        Nombre de participants : {workshop.nbParticipants}\n      </Typography>\n        Durée : <DropdownSingleValue iri={workshop.duration} dropdownKind=\"durations\"/> minutes\n      <div>\n        Thèmes : <ChipList list={workshop.topics} dropdownKind=\"topics\"/>\n      </div>\n      {!workshop.topicPrecision ? null : (\n        <Typography variant='body2' component='p'>\n          Précisions sur le thème : {workshop.topicPrecision}\n        </Typography>\n      )}\n      <div>\n        Compétences : <ChipList list={workshop.skills} dropdownKind=\"skills\"/>\n      </div>\n      <div>\n        Types de participants : <ChipList list={workshop.participantKinds} dropdownKind=\"participantKinds\"/>\n      </div>\n      <div>\n        Tranches d'âge : <ChipList list={workshop.ageBreakpoints} dropdownKind=\"ageBreakpoints\"/>\n      </div>\n      <div>\n        Outils utilisés : <ChipList list={workshop.usedEquipments} dropdownKind=\"usedEquipments\"/>\n      </div>\n      <div>\n        Equipement fourni par : <ChipList list={workshop.equipmentSuppliers} dropdownKind=\"equipmentSuppliers\"/>\n      </div>\n      <Typography>\n        Bilan global : {workshop.globalReport}\n      </Typography>\n      <Typography>\n        Axes d'amélioration : {workshop.improvementAxis}\n      </Typography>\n      {!workshop.usedVault ? null : (\n        <div>\n          <Typography>\n            Coffre-fort numérique\n          </Typography>\n          <Typography variant='body2' component='p'>\n            Nb CFN créés : {workshop.nbBeneficiariesAccounts}\n          </Typography>\n          <Typography variant='body2' component='p'>\n            Nb documents : {workshop.nbStoredDocs}\n          </Typography>\n          <Typography variant='body2' component='p'>\n            Nb rappels : {workshop.nbCreatedEvents}\n          </Typography>\n          <Typography variant='body2' component='p'>\n            Nb contacts : {workshop.nbCreatedContacts}\n          </Typography>\n          <Typography variant='body2' component='p'>\n            Nb notes : {workshop.nbCreatedNotes}\n          </Typography>\n        </div>\n      )}\n    </CardContent>\n  </StyledCard>\n);\n\nexport default Workshop;\n","import { Container, Fab, Typography } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport Pagination from '@material-ui/lab/Pagination';\nimport React, { useContext } from 'react';\nimport { useNumber } from 'react-hanger/array';\nimport { useHistory, useParams } from 'react-router-dom';\nimport styled from 'styled-components';\nimport WorkshopsContext from '../../Context/WorkshopsContext';\nimport UseFetchDataEffect from '../../Hooks/UseFetchDataEffect';\nimport UseQueryParams from '../../Hooks/UseQueryParams';\nimport { centersEndpoint, paginationCount, workshopsEndpoint } from '../../Services/requests';\nimport { Center } from '../../Types/Center';\nimport Workshop from './Workshop';\n\nconst StyledContent = styled.div`\n  margin-top: 50px;\n  display: flex;\n  flex-direction: column;\n  color: whitesmoke;\n`;\n\nconst WorkshopsTitle = styled(Typography)`\n  flex: 1;\n`;\n\nconst TopRightIcon = styled(Fab)`\n  position: absolute;\n  right: 0;\n`;\n\nconst PaginationContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 32px;\n  margin-bottom: 32px;\n`;\n\nconst Workshops = () => {\n  const [center, setCenter] = React.useState<Center | null>(null);\n  const history = useHistory();\n  const {centerId} = useParams();\n  const {workshops, setWorkshops} = useContext(WorkshopsContext);\n  const [workshopsCount, workshopsCountActions] = useNumber(0);\n  const pagesCount = Math.ceil(workshopsCount / paginationCount);\n  const pageNumberParam = UseQueryParams().get('page');\n  const pageNumber = null === pageNumberParam ? 1 : pageNumberParam;\n\n  UseFetchDataEffect((`${centersEndpoint}/${centerId}`), setCenter);\n  UseFetchDataEffect((`${workshopsEndpoint}?center=${centerId}&page=${pageNumber}`), (data: any) => {\n    setWorkshops(data['hydra:member']);\n    workshopsCountActions.setValue(data['hydra:totalItems'])\n  });\n\n  const changePage = async (event: any, value: any) => {\n    history.push(`/centers/${centerId}/workshops?page=${null === value ? '1' : value}`)\n  }\n\n  const editWorkshop = (workshop: any) => {\n    const workshopId = workshop['@id'].match(/\\d+/);\n    history.push(`/workshop/${workshopId}/edit`);\n  }\n\n  return (\n    <Container maxWidth='sm'>\n      {center === null ? null : (\n        <StyledContent>\n          <WorkshopsTitle variant='h4' gutterBottom color='textPrimary'>\n            {center.name}\n          </WorkshopsTitle>\n          <Typography>Nb d'ateliers : {!center.workshops ? 0 : center.workshops.length}</Typography>\n        </StyledContent>\n      )\n      }\n      <WorkshopsTitle variant='h4' gutterBottom color='textPrimary'>\n        Ateliers\n      </WorkshopsTitle>\n      {center === null ? null : (\n        <TopRightIcon\n          size='medium'\n          color='primary'\n          aria-label='add'\n          onClick={() => history.push(`/centers/${center.id}/create-workshop`)}\n        >\n          <AddIcon/>\n        </TopRightIcon>\n      )}\n      <PaginationContainer>\n        <Pagination\n          count={pagesCount}\n          variant=\"outlined\"\n          page={parseInt(pageNumber as string)} onChange={changePage}\n        />\n      </PaginationContainer>\n      {workshops.map((workshop: any) => (\n        <Workshop key={workshop['@id']} workshop={workshop} editWorkshop={editWorkshop}/>\n      ))}\n    </Container>\n  );\n};\n\nexport default Workshops;\n","import {useLocation} from 'react-router-dom';\nimport React from 'react';\n\nexport default () => {\n  const { search } = useLocation();\n\n  return React.useMemo(() => new URLSearchParams(search), [search]);\n}\n","import Container from '@material-ui/core/Container';\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { centersEndpoint, workshopsEndpoint } from '../../Services/requests';\nimport WorkshopForm from './Components/WorkshopForm';\nimport UseFetchData from \"../../Hooks/UseFetchData\";\n\nconst CreateWorkshop = () => {\n  const {centerId} = useParams();\n  const workshop = {\n    center: `${centersEndpoint}/${centerId}`,\n    date: new Date(),\n    skills: [],\n    nbParticipants: 0,\n    nbBeneficiariesAccounts: 0,\n    nbStoredDocs: 0,\n    nbCreatedEvents: 0,\n    nbCreatedContacts: 0,\n    nbCreatedNotes: 0,\n  }\n  const createWorkshop = UseFetchData(workshopsEndpoint, () => {}, 'POST');\n\n  return (\n    <Container maxWidth='sm'>\n      <WorkshopForm workshop={workshop} onSubmit={createWorkshop}/>\n    </Container>\n  )\n}\n\nexport default CreateWorkshop;\n","import * as React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Charts from './Pages/Charts';\nimport Home from './Pages/Home';\nimport Login from './Pages/Login';\nimport Notes from './Pages/Notes/Notes';\nimport EditWorkshop from './Pages/Workshops/EditWorkshop';\nimport Workshops from './Pages/Workshops/Workshops';\nimport CreateWorkshop from \"./Pages/Workshops/CreateWorkshop\";\n\nconst Routes = () => (\n  <Router>\n    <Route path=\"/\" exact component={Home}/>\n    <Route path=\"/login\" component={Login}/>\n    <Route path=\"/charts\" component={Charts}/>\n    <Route path=\"/notes/:centerId\" component={Notes}/>\n    <Route path=\"/centers/:centerId/workshops\" component={Workshops}/>\n    <Route path=\"/workshop/:workshopId/edit\" component={EditWorkshop}/>\n    <Route path=\"/centers/:centerId/create-workshop\" component={CreateWorkshop}/>\n  </Router>\n);\n\nexport default Routes;\n","import { createTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport * as React from 'react';\nimport NotesContext from './Context/NotesContext';\nimport WorkshopsContext from './Context/WorkshopsContext';\nimport DropdownsContext from './Context/DropdownsContext';\nimport Routes from './Routes';\nimport { Note } from './Types/Notes';\nimport { WorkshopInterface } from './Types/Workshops';\nimport { dropdownsEndpoint } from \"./Services/requests\";\nimport UseFetchDataEffect from \"./Hooks/UseFetchDataEffect\";\nimport { Dropdowns } from \"./Types/Dropdowns\";\n\nconst theme = createTheme({\n  palette: {\n    type: 'dark',\n    background: {\n      default: '#203468',\n      paper: '#203468',\n    },\n    text: {\n      primary: '#eff1f7',\n      secondary: '#eff1f7',\n    },\n    primary: {\n      main: '#eff1f7',\n      contrastText: '#677273',\n    },\n  },\n});\n\nconst App = () => {\n  const [notes, setNotes] = React.useState<Note[]>([]);\n  const [workshops, setWorkshops] = React.useState<WorkshopInterface[]>([]);\n  const [dropdowns, setDropdowns] = React.useState<Dropdowns>({});\n\n  UseFetchDataEffect(dropdownsEndpoint, setDropdowns);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <WorkshopsContext.Provider value={{workshops, setWorkshops}}>\n        <NotesContext.Provider value={{notes, setNotes}}>\n          <DropdownsContext.Provider value={{dropdowns, setDropdowns}}>\n            <Routes/>\n          </DropdownsContext.Provider>\n        </NotesContext.Provider>\n      </WorkshopsContext.Provider>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Permanence this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}